#!/bin/bash
# shellcheck disable=SC1091

if [ $((TESTME)) -gt 0 ] ; then
    .  ./preinit.sh
    .  ./terminit.sh
else
    .  /sbin/preinit.sh
    .  /sbin/terminit.sh
fi

# Determine overall flags for operation (for this file)
getargy 'verbose' && export VERBOSE=$FOUNDVAL
getargx 'ibreak=all' && export BREAKALL=1
getargx 'ibreak=start2' && tmpshell "$FOUNDVAR $ "

loginfo 1 "COMLIN64 in postinit stage"
readanchor

# UP loopback network connection
ifconfig lo up 127.0.0.1

# Happens in memory  (Thu 08.May.2025 ?? created a bug)
mount -t tmpfs tmp-tmpfs "$TMP"
mount -t tmpfs run-tmpfs "$RUN"

# May have residuals from prev run
# NOOP

# Placeholders
#mkdir /run/dbus/

# Test alternate config
#export XDG_CONFIG_DIR=/etc/xdg-comlin

# Create this dynamically
export XDG_RUNTIME_DIR=/run/user/$UID
mkdir -p $XDG_RUNTIME_DIR
chmod -R a+rw $XDG_RUNTIME_DIR

loginfo 1 "Using XDG runtime dir: $XDG_RUNTIME_DIR"

getargx 'ibreak=pre-dbus' && tmpshell "$FOUNDVAR $ "

loginfo 0 -n "Starting DBUS ... "
mkdir -p /run/dbus
dbus-daemon --system >>"$SULOUT" 2>>"$SULERR" &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

# Start logging
loginfo 0 -n "Starting rsyslogd ... "
rm -f /run/rsyslogd.pid
rsyslogd >> "$SULOUT" 2>> "$SULERR" &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

dbus-daemon --session >/dev/null 2>&1 &

getargx 'ibreak=polkit' && tmpshell "$FOUNDVAR $ "
loginfo 0 -n "Starting polkit ... "
/usr/libexec/polkitd >>"$SULOUT" 2>>"$SULERR" &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

getargx 'ibreak=udevd' && tmpshell "$FOUNDVAR $ "
loginfo 0 -n "Starting systemd-udevd ... "
/lib/systemd/systemd-udevd >>"$SULOUT" 2>>"$SULERR" &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

#loginfo 0  -n "systemd-logind "
#/lib/systemd/systemd-logind >>$SULOUT 2>>$SULERR &
#getargy 'isleep' && sleep "$FOUNDVAL"
#loginfo 0 -t -e " \033[32;1mOK\033[0m"

getargx 'ibreak=sound' &&  tmpshell "$FOUNDVAR $ "
loginfo 0 -n "Starting sound system ... "
rm -rf /dev/snd/*
make_sound_devices
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

rm -rf /var/run/pulse/pid

# Third round in this chroot
devload "Finalizing devices ... "

getargx 'ibreak=pre-acpi' && tmpshell  "$FOUNDVAR $ "
loginfo 0 -n "Starting acpid ... "
/usr/sbin/acpid >>"$SULOUT" 2>>"$SULERR" &

getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

loginfo 0 -n "Pulseaudio daemon ... "
mkdir -p /dev/shm
pulseaudio --deaemonize=no --system --realtime  >>"$SULOUT" 2>>"$SULERR"  &
#pulseaudio --system  >>"$SULOUT" 2>>"$SULERR"  &
#pactl set-sink-mute 0 0  >>$SULOUT 2>>$SULERR
#pactl set-sink-volume 0 0.5  >>$SULOUT 2>>$SULERR
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

# The kernel could not load it ... so we preload it
modprobe ccm

getargx 'ibreak=network' && tmpshell "$FOUNDVAR $ "
loginfo 0 -n "Starting network ... "
dhclient >>"$SULOUT" 2>>"$SULERR" &
/usr/sbin/NetworkManager  --no-daemon &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

getargx 'ibreak=pre-sshd' && tmpshell  "$FOUNDVAR $ "
loginfo 0 -n "Starting sshd ... "
/usr/sbin/sshd >>"$SULOUT" 2>>"$SULERR" &
getargy 'isleep' && sleep "$FOUNDVAL"
loginfo 0 -t -e " \033[32;1mOK\033[0m"

# This is a precaution, comment out if not wanted
#/usr/sbin/thermald

# Our power key watcher
/usr/bin/powacpi &

SDCOM="/var/tmp/.shutdowncmd"

# Bye Bye old root
NEWHOME="/root"
mkdir -p $NEWHOME
cd $NEWHOME || echo "Cannot change to $NEWHOME"

# Xorg needs these clean
rm -f /tmp/.X*lock
rm -rf /tmp/.X11-unix

export XAUTHORITY=$NEWHOME/.Xauthority
export ICEAUTHORITY=$NEWHOME/.ICEauthority
export XAUTHLOCALHOSTNAME=localhost

rm -f $SDCOM                # Fresh start

while : ; do
    stty -g >.stty_dump.txt

    getargx 'ibreak=pre-gui' && tmpshell  "$FOUNDVAR $ "
    loginfo 0 -n -e "Starting GUI, \033[34;1m(in progress)\033[0m ... "
    getargy 'isleep' && sleep "$FOUNDVAL"

    # Start initial GUI for login program 'pylogin'
    xinit -- -keeptty vt5  >.xorg_out 2>.xorg_err
    getargy 'isleep' && sleep "$FOUNDVAL"

    cd $NEWHOME || echo "Cannot change to $NEWHOME"

    # Back to initial terminal
    chvt 1
    # Sadly, this was needed, as the terminal was messed up (Xorg bug?)
    stty "$(cat .stty_dump.txt)"
    stty sane

    loginfo 0 -t -e " \033[32;1mDone\033[0m"

    getargx 'ibreak=post-gui' &&  tmpshell "$FOUNDVAR $ "

    # Shutdown?
    if [ -e $SDCOM ] ; then
        getargx 'ibreak=pre-unmount' && tmpshell "$FOUNDVAR $ "
        downClean
        getargx 'ibreak=pre-unmount' && tmpshell "$FOUNDVAR $ "
        umountAll
        umount /proc /sys /dev/pts /dev
        mount -o remount,ro /
        getargx 'ibreak=post-cleanup' && tmpshell "$FOUNDVAR $ "
        break
    fi

    # If it got here, it is a GUI Exit / Logout
    #echo
    echo "-------------------------------------------------------------"
    echo "Type:     'exit' (or Ctrl-D) to start a new X login"
    echo "          'linux_reboot -f' to restart computer."
    echo "          'linux_poweroff -f' to power down computer."
    echo "           ... or any available bash command."
    echo

    tmpshell "System Control Prompt $ "
done

exit

# EOF
