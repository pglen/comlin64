#!/bin/bash
##########################################################################
##                                                                      ##
## This program is free software; you can redistribute it and/or modify ##
## it under the terms of the GNU General Public License as published by ##
## the Free Software Foundation; either version 2 of the License, or    ##
## (at your option) any later version.                                  ##
##                                                                      ##
##########################################################################

# Build initramfs

#echo "exec:" $0 $@   # Pathetic excuse for checking it ...
#echo pwd: $(pwd)
#echo  ls: $(ls config_build -l)

.  config_build nocheck
. "$SCRIPTS"/misc/lib/lib_fail

if [ ! -f $KEYGET ] ; then
    echo "Please exceute 'make apps' first."
    exit 1;
fi

# Exit if check fails

exit_if_fail() {

    $1 $2; ERR=$?

    if [ "$ERR" != "0" ] ; then
        echo "Error in $2"
        exit 1
    fi
}

if [ ! -d $INITRAMFSDIR ]; then
    echo "No initramfs files yet."
    exit 1
fi

# Syntax check
exit_if_fail "bash -n" $INITRAMFSDIR/init
exit_if_fail "bash -n" $INITRAMFSDIR/init.sh

exit_if_fail shellcheck $INITRAMFSDIR/init
exit_if_fail shellcheck $INITRAMFSDIR/init.sh

# Calc array size
NUM=$((${#INITRAMFSDIRs[@]}-1))

for AA in $(seq 0 $NUM)  ; do
    DDD=${INITRAMFSDIRs[$AA]}
    RRR=${INITRAMFSRESs[$AA]}
    echo -n "Processing: $DDD ... "

    # Gather some COMLIN apps into initramfs
    cp -au  "$APPDIR"/keyget/keyget "$DDD"/bin
    cp -au  "$APPDIR"/reboot/linux_reboot "$DDD"/bin
    cp -au  "$APPDIR"/reboot/linux_poweroff "$DDD"/bin

    # Add the common init items
    cp -au "$INITRAMFSDIR"/init "$DDD"
    cp -au "$INITRAMFSDIR"/init.sh "$DDD"

    # Create a work space for root copy
    RTMP="$TMPDIR"/"$DDD"
    mkdir -p "$RTMP"

    # TEST if  diff is OK
    #rm -f $RTMP/init

    # Changed? Sun 25.May.2025 disabled by PG
    DDIFF=$(diff -rq  --no-dereference -x "udev" -x "dev" "$DDD" \
                            "$RTMP")
    ERRX=$?
    #echo DDIFF: $DDIFF
    #echo ERRX: $ERRX

    if [ $ERRX -eq 0 ] ; then
        echo Up-to-date.
        continue
    fi

    # Start with clean temp
    rm -rf "$RTMP"/*

    # Clean test entities
    rm -f "$DDD"/run/rsyslog.pid
    cp -au "$DDD"/* "$RTMP"

    chown -R root.root "$RTMP"
    chown syslog.adm "$RTMP"/var/log/*

    #echo -n "Assembling cpio archive ... "
    (cd "$RTMP"; find . | cpio -o -H newc | gzip) > "$RRR"

    # Clean  Sun 25.May.2025 disabled for up to date check
    #rm -rf $RTMP/*

done

# EOF
