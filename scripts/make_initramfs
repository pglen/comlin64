#!/bin/bash
##########################################################################
##                                                                      ##
## This program is free software; you can redistribute it and/or modify ##
## it under the terms of the GNU General Public License as published by ##
## the Free Software Foundation; either version 2 of the License, or    ##
## (at your option) any later version.                                  ##
##                                                                      ##
##########################################################################

# Build initramfs

#echo "exec:" $0 $@   # Pathetic excuse for checking it ...
#echo pwd: $(pwd)
#echo  ls: $(ls config_build -l)

.  config_build nocheck
. "$SCRIPTS"/misc/lib/lib_fail

echo -n "Making initramfs ... "

if [ ! -f $KEYGET ] ; then
    echo "Please exceute 'make apps' first."
    exit 1;
fi

# Exit if check fails

exit_if_fail() {

    $1 $2; ERR=$?

    if [ "$ERR" != "0" ] ; then
        echo "Error in $2"
        exit 1
    fi
}

if [ ! -d $INITRAMFSDIR ]; then
    echo "No initramfs files yet."
    exit 1
fi

# Syntax check
exit_if_fail "bash -n" $INITRAMFSDIR/init
exit_if_fail "bash -n" $INITRAMFSDIR/lib/shlib/comlin.sh

exit_if_fail shellcheck $INITRAMFSDIR/init
exit_if_fail shellcheck $INITRAMFSDIR/lib/shlib/comlin.sh

# Gather some COMLIN apps into initramfs

cp -a $APPDIR/keyget/keyget $INITRAMFSDIR/bin
cp -a $APPDIR/reboot/linux_reboot $INITRAMFSDIR/bin
cp -a $APPDIR/reboot/linux_poweroff $INITRAMFSDIR/bin

# Create a root owned copy
RTMP=$TMPDIR/initramfs
mkdir -p $RTMP
rm -rf $RTMP/*

cp -a $INITRAMFSDIR/* $RTMP

# TESTING, see if it boots with systemd:
#cp $RTMP/bin/systemd $RTMP/init

chown -R root.root $RTMP

# Make initramfs from custom booter. The initrd is phased out
# so we are making a custom one for auto bootdrive search

#echo -n "Assembling cpio archive ... "
(cd $RTMP; find . | cpio -o -H newc | gzip) > $INITRAMFSRES

# Clean
rm -rf $RTMP/*

#echo "Geneated:" $INITRAMFSRES

# EOF
