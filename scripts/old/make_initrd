#!/bin/bash
##########################################################################
##                                                                      ##
## assembles the gzipped initrd image                                   ##
##                                                                      ##
## This program is free software; you can redistribute it and/or modify ##
## it under the terms of the GNU General Public License as published by ##
## the Free Software Foundation; either version 2 of the License, or    ##
## (at your option) any later version.                                  ##
##                                                                      ##
##########################################################################

. ./config_build
. "$SCRIPTS"/misc/lib/lib_fail

echo
echo "----------------------------------"
echo "        Assembling initrd         "
echo "        May need sudo pass        "
echo "----------------------------------"
echo

echo "This module is obsolete"
exit 1

OUTF=$KERNEL/$INITRDFS
TMPOUT=$TMPDIR/$INITRDFS

umount $MOUNTPOINT 2>&1 >/dev/null

# Clean out old
rm -f $OUTF*
rm -f $TMPOUT*
#rm -f $MOUNTPOINT*

# Create zeroed image file and make a filesystem
echo -n Creating ${RAMSIZE} bytes holder file $TMPOUT ...
dd if=/dev/zero bs=1024 count=$(($RAMDISKSIZE)) of=$TMPOUT 2>/dev/null || fail
echo OK

# Make file system
echo -n Creating holder FS ...
mke2fs -F -m0 -b1024 $TMPOUT 2>&1 >/dev/null || fail
#mke2fs -F -m0  -b2048 $TMPOUT -L comlin >/dev/null 2>&1 || fail
tune2fs -c0 -i0 $TMPOUT  >/dev/null  2>&1 || fail
echo OK

# Mount it on $MOUNTPOINT
sudo mount -o loop $TMPOUT $MOUNTPOINT || fail

# We don't need that directory
#sudo rmdir "$MOUNTPOINT"/lost+found

# Copy initrdfs onto initrdfs image
echo -n "Copying initrd fs to "$TMPDIR"/initrdfs ... "
sudo cp -dpR initramfs/* $MOUNTPOINT || fail
echo OK

echo -n "Copying utilities ... "
mkdir -p "$MOUNTPOINT"/bin
mkdir -p "$MOUNTPOINT"/sbin
sudo cp  -a apps/reboot/linux_reboot "$MOUNTPOINT"/sbin
sudo cp  -a apps/reboot/linux_poweroff "$MOUNTPOINT"/sbin
sudo cp  -a apps/keyget/keyget "$MOUNTPOINT"/bin
echo OK

# Make sure all new files are owned by root
sudo chown -R root.root $MOUNTPOINT

# See if not full
USED=`df $MOUNTPOINT |  tail -1 | awk {'print $5'} | sed s/%//`

# Make sure initrdfs has space

if [ $USED -gt 90 ] ; then
	echo Warninig: initrdfs almost full
fi

echo "Initrd file system usage: "$USED"%"

mv $TMPOUT $OUTF
sudo umount $MOUNTPOINT

sudo losetup -d /dev/loop0 >/dev/null 2>&1

#echo -n "Uncompressed size: "
#ls -l  $OUTF | awk {'printf "%.2f MB\n", $5 / 1000000'}

# Gzip it
#echo -n "Compressing to $OUTF ... "
gzip -f $OUTF || fail
#bzip2 -f $OUTF || fail
#xz -1f $OUTF || fail
#xz -0f --check=none $OUTF || fail
#echo "OK"

echo -n "Initrdfs size: "
ls -l $OUTF.gz | awk {'printf "%.2f MB\n", $5 / 1000000'}

exit 0
