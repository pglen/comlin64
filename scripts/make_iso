#!/bin/bash
##########################################################################
##                                                                      ##
## Make the install ISO                                                 ##
##                                                                      ##
## This program is free software; you can redistribute it and/or modify ##
## it under the terms of the GNU General Public License as published by ##
## the Free Software Foundation; either version 2 of the License, or    ##
## (at your option) any later version.                                  ##
##                                                                      ##
##########################################################################

. config_build
. "$SCRIPTS"/misc/lib/lib_fail

echo "----------------------------------"
echo "        Making ISO image          "
echo "----------------------------------"

# See if conditions are met (checks are also in prepiso)

if [ ! -f $KEYGET ] ; then
    echo "Execute 'make apps' first."
    exit 1
fi

if [ ! -f $KERNELDIR/$KERNELBIN ] ; then
    echo "Execute 'make getkern' first."
    exit 1
fi

if [ ! -f $KERNELDIR/initramfs ] ; then
    echo "Execute 'make initramfs' first."
    exit 1
fi

if [ ! -f ./boot/grub/grub.conf ] ; then
    echo "Execute 'make getboot' first."
    exit 1
fi

rm -f $ROOTISOFILE $ROOTISOFILE.part
touch $ROOTISOFILE.part
scripts/progress.sh $ROOTISOFILE.part &

echo -n "Making $ROOTISOFILE ($ROOTISOFILE.part) ... "
mkisofs -input-charset utf-8 -R -b boot/grub/stage2_eltorito -no-emul-boot  \
         -boot-load-size 4 -boot-info-table -o $ROOTISOFILE.part \
         -quiet $ROOTFS  || fail
echo
echo OK

mv $ROOTISOFILE.part $ROOTISOFILE

SSS=$(stat -c  "%s" $ROOTISOFILE)
echo "ISO written, $(($SSS/1000000)) MBytes."

# EOF
